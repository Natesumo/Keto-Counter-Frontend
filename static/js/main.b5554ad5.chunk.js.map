{"version":3,"sources":["Components/navbar.component.js","Components/food-list.component.js","Components/create-food.component.js","Components/create-user.component.js","Components/food-added.component.js","Components/food-deleted.component.js","Components/user-created.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","FoodList","props","onChangeUsername","bind","onSubmit","handleClick","state","username","users","foods","axios","get","then","response","data","length","setState","map","user","catch","error","console","log","e","this","target","value","preventDefault","userchoice","food","post","ref","required","onChange","key","type","scope","name","calories","carbs","href","onClick","reduce","a","b","CreateFood","onChangeName","onChangeCalories","onChangeCarbs","window","location","CreateUser","res","AddedFood","role","DeletedFood","CreatedUser","App","path","exact","component","FoodAdded","FoodDeleted","UserCreated","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b5554ad5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg p-3\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          KetoCounter\r\n        </Link>\r\n        <div className=\"collpase navbar-collapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Foods\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/create\" className=\"nav-link\">\r\n                Create Food Log\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/user\" className=\"nav-link\">\r\n                Create User\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class FoodList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      users: [],\r\n      foods: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://keto-counter-backend.herokuapp.com/users/\")\r\n      .then((response) => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map((user) => user.username),\r\n            username: response.data[0].username,\r\n            foods: [],\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const userchoice = {\r\n      username: this.state.username,\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        \"https://keto-counter-backend.herokuapp.com/users/\" +\r\n          userchoice.username\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          foods: response.data.foods,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleClick(food) {\r\n    axios.post(\r\n      \"https://keto-counter-backend.herokuapp.com/foods/delete/\" + food\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className=\" display-4 text-center m-3\">Food Log</p>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"m2 lead\">Username: </label>\r\n            <select\r\n              ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}\r\n            >\r\n              {this.state.users.map(function (user) {\r\n                return (\r\n                  <option key={user} value={user}>\r\n                    {user}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"View Food Log\"\r\n              className=\"btn btn-primary p-2\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Calories</th>\r\n              <th scope=\"col\">Carbs</th>\r\n              <th scope=\"col\">Change</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.foods.map((food) => {\r\n              return (\r\n                <tr key={food.name}>\r\n                  <td>{food.name}</td>\r\n                  <td>{food.calories}</td>\r\n                  <td>{food.carbs}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <a\r\n                      href=\"/fooddeleted\"\r\n                      onClick={() => this.handleClick(food.name)}\r\n                    >\r\n                      Delete\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n            <tr>\r\n              <td className=\"lead font-weight-bold\">Totals:</td>\r\n              <td className=\"lead font-weight-bold\">\r\n                {this.state.foods\r\n                  .map((food) => food.calories)\r\n                  .reduce((a, b) => a + b, 0)}\r\n              </td>\r\n              <td className=\"lead font-weight-bold\">\r\n                {this.state.foods\r\n                  .map((food) => food.carbs)\r\n                  .reduce((a, b) => a + b, 0)}\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateFood extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      name: \"\",\r\n      calories: 0,\r\n      carbs: 0,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://keto-counter-backend.herokuapp.com/users/\")\r\n      .then((response) => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map((user) => user.username),\r\n            username: response.data[0].username,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCalories(e) {\r\n    this.setState({\r\n      calories: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCarbs(e) {\r\n    this.setState({\r\n      carbs: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const food = {\r\n      username: this.state.username,\r\n      name: this.state.name,\r\n      calories: this.state.calories,\r\n      carbs: this.state.carbs,\r\n    };\r\n\r\n    axios.post(\"https://keto-counter-backend.herokuapp.com/foods/add\", food);\r\n\r\n    window.location = \"/foodadded\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className=\" display-4 text-center m-3\">Create New Food Log</p>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"m2 lead\">Username: </label>\r\n            <select\r\n              ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}\r\n            >\r\n              {this.state.users.map(function (user) {\r\n                return (\r\n                  <option key={user} value={user}>\r\n                    {user}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"m2 lead\">Name of food: </label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.name}\r\n              onChange={this.onChangeName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"m2 lead\">Calories: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.calories}\r\n              onChange={this.onChangeCalories}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"m2 lead\">Carbs (in grams): </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.carbs}\r\n              onChange={this.onChangeCarbs}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Create Food Log\"\r\n              className=\"btn btn-primary p-2\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n    };\r\n\r\n    console.log(user);\r\n\r\n    axios\r\n      .post(\"https://keto-counter-backend.herokuapp.com/users/add\", user)\r\n      .then((res) => console.log(res.data));\r\n\r\n    this.setState({\r\n      username: \"\",\r\n    });\r\n\r\n    window.location = \"/usercreated\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className=\" display-4 text-center m-3\">Create New User</p>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"m2 lead\">Username: </label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Create User\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AddedFood extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"alert alert-success m-4 p-4\" role=\"alert\">\r\n        <p className=\"h3 text-center\">Food has been added!</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DeletedFood extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"alert alert-success m-4 p-4\" role=\"alert\">\r\n                <p className=\"h3 text-center\">Food has been deleted!</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class CreatedUser extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"alert alert-success m-4 p-4\" role=\"alert\">\r\n        <p className=\"h3 text-center\">User has been created!</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Navbar from \"./Components/navbar.component\";\r\nimport FoodList from \"./Components/food-list.component\";\r\nimport CreateFood from \"./Components/create-food.component\";\r\nimport CreateUser from \"./Components/create-user.component\";\r\nimport FoodAdded from \"./Components/food-added.component\";\r\nimport FoodDeleted from \"./Components/food-deleted.component\";\r\nimport UserCreated from \"./Components/user-created.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Navbar />\r\n        <Route path=\"/\" exact component={FoodList} />\r\n        <Route path=\"/create\" exact component={CreateFood} />\r\n        <Route path=\"/user\" exact component={CreateUser} />\r\n        <Route path=\"/foodadded\" exact component={FoodAdded} />\r\n        <Route path=\"/fooddeleted\" exact component={FoodDeleted} />\r\n        <Route path=\"/usercreated\" exact component={UserCreated} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}